// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: route.proto

package route;

public interface RouteOrBuilder extends
    // @@protoc_insertion_point(interface_extends:route.Route)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int64 id = 1;</code>
   * @return The id.
   */
  long getId();

  /**
   * <code>int64 origin = 2;</code>
   * @return The origin.
   */
  long getOrigin();

  /**
   * <code>int64 destination = 3;</code>
   * @return The destination.
   */
  long getDestination();

  /**
   * <code>string path = 4;</code>
   * @return The path.
   */
  java.lang.String getPath();
  /**
   * <code>string path = 4;</code>
   * @return The bytes for path.
   */
  com.google.protobuf.ByteString
      getPathBytes();

  /**
   * <code>bytes payload = 5;</code>
   * @return The payload.
   */
  com.google.protobuf.ByteString getPayload();

  /**
   * <code>string payloadType = 6;</code>
   * @return The payloadType.
   */
  java.lang.String getPayloadType();
  /**
   * <code>string payloadType = 6;</code>
   * @return The bytes for payloadType.
   */
  com.google.protobuf.ByteString
      getPayloadTypeBytes();

  /**
   * <code>string payloadString = 7;</code>
   * @return The payloadString.
   */
  java.lang.String getPayloadString();
  /**
   * <code>string payloadString = 7;</code>
   * @return The bytes for payloadString.
   */
  com.google.protobuf.ByteString
      getPayloadStringBytes();

  /**
   * <code>int32 payloadInteger = 8;</code>
   * @return The payloadInteger.
   */
  int getPayloadInteger();

  /**
   * <code>double payloadDouble = 9;</code>
   * @return The payloadDouble.
   */
  double getPayloadDouble();

  /**
   * <code>string msgType = 10;</code>
   * @return The msgType.
   */
  java.lang.String getMsgType();
  /**
   * <code>string msgType = 10;</code>
   * @return The bytes for msgType.
   */
  com.google.protobuf.ByteString
      getMsgTypeBytes();

  /**
   * <code>repeated .route.Work listOfWork = 11;</code>
   */
  java.util.List<route.Work> 
      getListOfWorkList();
  /**
   * <code>repeated .route.Work listOfWork = 11;</code>
   */
  route.Work getListOfWork(int index);
  /**
   * <code>repeated .route.Work listOfWork = 11;</code>
   */
  int getListOfWorkCount();
  /**
   * <code>repeated .route.Work listOfWork = 11;</code>
   */
  java.util.List<? extends route.WorkOrBuilder> 
      getListOfWorkOrBuilderList();
  /**
   * <code>repeated .route.Work listOfWork = 11;</code>
   */
  route.WorkOrBuilder getListOfWorkOrBuilder(
      int index);
}
