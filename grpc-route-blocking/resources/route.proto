syntax = "proto3";
option java_multiple_files = true;
option optimize_for = SPEED;
package route;

// a service interface (contract)

service RouteService {
   rpc request(Route) returns (Route) {}

   // Accepts a stream of Routes on a route being traversed, returning a
   // RouteSummary when traversal is completed.
   rpc RecordRoute(stream Route) returns (RouteSummary) {}
}

// basic message correspondence between two points. Additional metadata 
// and routing options can be added.

message Route {
  int64 id = 1;
  int64 origin = 2;
  int64 destination = 3;
  string path = 4;
  bytes payload = 5;
  string payloadType = 6;
  string payloadString = 7;
  int32 payloadInteger = 8;
  double payloadDouble = 9;
  string msgType = 10;
  repeated Work listOfWork = 11;
}

message Work {
  int64 id = 1;
  int64 origin = 2;
  string msgType = 3;
  string payloadType = 4;
  string payload = 5;
}

message RouteSummary {
  string status = 1;
  int32 noOfMessagesProcesses = 2;
}

